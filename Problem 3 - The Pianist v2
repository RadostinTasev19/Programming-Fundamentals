
function pianist(input) {
    let numPieces = +input.shift()
    let pieceCollection = {}
    for (let index = 0; index < numPieces; index++) {

        let [piece, composer, key] = input[index].split("|")
        // we create an object in which we will hold each piece as key,
        //the values will be objects,which will have composer as key and key as value
        pieceCollection[piece] = {
            "Composer": composer,
            "Key": key
        }
    }
    for (let index = numPieces; index < input.length; index++) {
        if (input[index] === "Stop") {
            break;
        }
        let [command, piece, ...tokens] = input[index].split("|")
        switch (command) {
            case "Add":
                piece;
                let [composer, key] = tokens

                if (!pieceCollection.hasOwnProperty(piece)) {
                    pieceCollection[piece] = {
                        "Composer": composer,
                        "Key": key
                    }
                    console.log(`${piece} by ${composer} in ${key} added to the collection!`)
                } else {
                    console.log(`${piece} is already in the collection!`)
                }

                break;
            case "Remove":
                piece;
                debugger
                if (pieceCollection.hasOwnProperty(piece)) {
                    delete pieceCollection[piece]
                    console.log(`Successfully removed ${piece}!`)
                } else {
                    console.log(`Invalid operation! ${piece} does not exist in the collection.`)
                }
                break;
            case "ChangeKey":

                piece;
                let newKey = tokens[0]
                if (pieceCollection.hasOwnProperty(piece)) {
                    pieceCollection[piece].Key = newKey
                    console.log(`Changed the key of ${piece} to ${newKey}!`)
                } else {
                    console.log(`Invalid operation! ${piece} does not exist in the collection.`)
                }
                break;

            default:
                break;
        }


    }
    let entries = Object.entries(pieceCollection)
    entries.forEach((line) => {
        console.log(`${line[0]} -> Composer: ${line[1].Composer}, Key: ${line[1].Key}`)
    })
}
pianist(
    [
        '3',
        'Fur Elise|Beethoven|A Minor',
        'Moonlight Sonata|Beethoven|C# Minor',
        'Clair de Lune|Debussy|C# Minor',
        'Add|Sonata No.2|Chopin|B Minor',
        'Add|Hungarian Rhapsody No.2|Liszt|C# Minor',
        'Add|Fur Elise|Beethoven|C# Minor',
        'Remove|Clair de Lune',
        'ChangeKey|Moonlight Sonata|C# Major',
        'Stop'
    ]

)
