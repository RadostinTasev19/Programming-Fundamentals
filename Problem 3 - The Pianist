function thePianist(input) {

    let piecesCount = input.shift()
    let map = new Map()
   
    for (let index = 0; index < piecesCount; index++) {

        let [piece, composer, key] = input[0].split("|")
        map.set(piece, [])
        map.get(piece).push(composer, key)
        input.shift()
    }
    for (const line of input) {
        if (line === "Stop") {
            break;
        }
        let [action, piece, ...tokens] = line.split("|").map((el) => isNaN(el) ? el : Number(el))
        switch (action) {
            case "Add":
                piece;
                let [composer, key] = tokens
                if (!map.has(piece)) {
                    map.set(piece, [])
                    map.get(piece).push(composer, key)
                    console.log(`${piece} by ${composer} in ${key} added to the collection!`)
                } else {
                    console.log(`${piece} is already in the collection!`)
                }
                break;
            case "Remove":
                piece;
                if (map.has(piece)) {
                    map.delete(piece)
                    console.log(`Successfully removed ${piece}!`)
                } else {
                    console.log(`Invalid operation! ${piece} does not exist in the collection.`)
                }
                break;
            case "ChangeKey":
                debugger
                piece;
                let newKey = tokens[0]
                if (map.has(piece)) {
                    map.get(piece)[1] = newKey
                    console.log(`Changed the key of ${piece} to ${newKey}!`)
                } else {
                    console.log(`Invalid operation! ${piece} does not exist in the collection.`)
                }
                break;
            case "Add":

                break;
            default:
                break;
        }
    }
    let mapArr = Array.from(map)
    mapArr.forEach((line) => {
        console.log(`${line[0]} -> Composer: ${line[1][0]}, Key: ${line[1][1]}`)
    })
}
thePianist(
    [
        '3',
        'Fur Elise|Beethoven|A Minor',
        'Moonlight Sonata|Beethoven|C# Minor',
        'Clair de Lune|Debussy|C# Minor',
        'Add|Sonata No.2|Chopin|B Minor',
        'Add|Hungarian Rhapsody No.2|Liszt|C# Minor',
        'Add|Fur Elise|Beethoven|C# Minor',
        'Remove|Clair de Lune',
        'ChangeKey|Moonlight Sonata|C# Major',
        'Stop'
    ]

)
